name: Deployment Pipeline

env:
    ARTIFACT_REGISTRY: ${{ secrets.GCP_REGION }}-docker.pkg.dev
    IMAGE_REPO_URL: "$ARTIFACT_REGISTRY/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.REGISTRY_REPO_NAME }}"

on:
  workflow_dispatch:
  push:
    branches:
      - core/*

jobs:
# /////////////////////////////////////////////////////////////////////////////
# /////////////////////////////////////////////////////////////////////////////
# /////////////////////////////////////////////////////////////////////////////
  image-api:
    name: Checkout, Build and Push API Image
    runs-on: ubuntu-latest
    # Map step output to job output
    outputs:
      NAME: ${{ steps.image_name_tag.outputs.NAME }}
      TAG: ${{ steps.image_name_tag.outputs.TAG }}
      NAME_TAG: ${{ steps.image_name_tag.outputs.NAME_TAG }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.REPO_OWNER }}/${{ vars.REPO_NAME_API }}
          path: ${{ vars.REPO_NAME_API }}
        #######################################################################
      - name: Extract TAG, Set NAME:TAG Output
        id: image_name_tag
        run: |
          repo_url=https://github.com/${{ vars.REPO_OWNER }}/${{ vars.REPO_NAME_API }}.git
          NAME=api
          TAG=$(git ls-remote --tags $repo_url | sort -u -r | head -n 1 | grep -o "v.*")
          echo "TAG=$TAG" >> "$GITHUB_OUTPUT"
          echo "NAME_TAG=$NAME:$TAG" >> "$GITHUB_OUTPUT"
          echo "$NAME NAME:TAG   :   $NAME_TAG"
        #######################################################################
      # - name: Create NAME:TAG and export to outputs
      #   id: image_name_tag
      #   run: |
      #     NAME=api
      #     TAG=${{ steps.repo_tag.outputs.LATEST_TAG }}
      #     NAME_TAG=$NAME:$TAG
      #     echo "NAME=$NAME" >> "$GITHUB_OUTPUT"
      #     echo "TAG=$TAG" >> "$GITHUB_OUTPUT"
      #     echo "NAME_TAG=$NAME_TAG" >> "$GITHUB_OUTPUT"
      #     echo "Image name:tag ::: $NAME_TAG"
        #######################################################################
      - name: Build Docker Image
        id: image_build
        run: |
          NAME_TAG=${{ steps.image_name_tag.outputs.NAME_TAG }}
          IMAGE=${{ env.IMAGE_REPO_URL }}/$NAME_TAG
          echo "IMAGE=$IMAGE" >> "$GITHUB_OUTPUT"

          cd ${{ vars.REPO_NAME_API }}
          docker build -t $IMAGE ./api_service
        #######################################################################
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2.1.7
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        #######################################################################
      - name: Configure Docker to use gcloud
        run: gcloud auth configure-docker ${{ env.ARTIFACT_REGISTRY }}
        #######################################################################
      - name: Push to Artifact Registry
        run: |
          IMAGE=${{ steps.image_build.outputs.IMAGE }}
          docker push $IMAGE
# /////////////////////////////////////////////////////////////////////////////
# /////////////////////////////////////////////////////////////////////////////
# /////////////////////////////////////////////////////////////////////////////
  image-webapp:
    name: Checkout, Build and Push Webapp Image
    runs-on: ubuntu-latest
    # Map step output to job output
    outputs:
      NAME: ${{ steps.image_name_tag.outputs.NAME }}
      TAG: ${{ steps.image_name_tag.outputs.TAG }}
      NAME_TAG: ${{ steps.image_name_tag.outputs.NAME_TAG }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.REPO_OWNER }}/${{ vars.REPO_NAME_WEBAPP }}
          path: ${{ vars.REPO_NAME_WEBAPP }}
        #######################################################################
      - name: Extract TAG, Set NAME:TAG Output
        id: image_name_tag
        run: |
          repo_url=https://github.com/${{ vars.REPO_OWNER }}/${{ vars.REPO_NAME_WEBAPP }}.git
          NAME=webapp
          TAG=$(git ls-remote --tags $repo_url | sort -u -r | head -n 1 | grep -o "v.*")
          echo "TAG=$TAG" >> "$GITHUB_OUTPUT"
          echo "NAME_TAG=$NAME:$TAG" >> "$GITHUB_OUTPUT"
          echo "$NAME NAME:TAG   :   $NAME_TAG"
        #######################################################################
      # - name: Create imagename:tag and export to outputs
      #   id: image_name_tag
      #   run: |
      #     NAME=webapp
      #     TAG=${{ steps.repo_tag.outputs.LATEST_TAG }}
      #     echo "NAME=$NAME" >> "$GITGUB_OUTPUT"
      #     echo "TAG=$TAG" >> "$GITGUB_OUTPUT"
      #     NAME_TAG=$NAME:$TAG
      #     echo "NAME_TAG=$NAME_TAG" >> "$GITHUB_OUTPUT"
      #     echo "Image NAME:TAG   :   $NAME_TAG"
        #######################################################################
      - name: Build Docker Image
        id: image_build
        run: |
          NAME_TAG=${{ steps.image_name_tag.outputs.NAME_TAG }}
          IMAGE=${{ env.IMAGE_REPO_URL }}/$NAME_TAG
          echo "IMAGE=$IMAGE" >> "$GITHUB_OUTPUT"

          cd ${{ vars.REPO_NAME_WEBAPP }}
          docker build -t $IMAGE ./app
        #######################################################################
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2.1.7
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        #######################################################################
      - name: Configure Docker to use gcloud
        run: gcloud auth configure-docker ${{ env.ARTIFACT_REGISTRY }}
        #######################################################################
      - name: Push to Artifact Registry
        run: |
          IMAGE=${{ steps.image_build.outputs.IMAGE }}
          docker push $IMAGE
# /////////////////////////////////////////////////////////////////////////////
# /////////////////////////////////////////////////////////////////////////////
# /////////////////////////////////////////////////////////////////////////////
  deploy:
    name: Deploy Services
    runs-on: ubuntu-latest
    needs:
      - image-api
      - image-webapp

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        #######################################################################
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2.1.7
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        #######################################################################
      - name: Deploy with HashiCorp - Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve \
            -var="project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var="region=${{ secrets.GCP_REGION }}" \
            -var="artifact_registry_repo=${{ secrets.REGISTRY_REPO_NAME }}" \
            -var="api_image_name=${{ needs.image-api.outputs.NAME }}" \
            -var="api_image_tag=${{ needs.image-api.outputs.TAG }}" \
            -var="webapp_image_name=${{ needs.image-webapp.outputs.NAME }}" \
            -var="webapp_image_tag=${{ needs.image-webapp.outputs.TAG }}" \