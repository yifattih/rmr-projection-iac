name: Deployment Pipeline

# env:
    # ARTIFACT_REGISTRY: ${{ secrets.GCP_REGION }}-docker.pkg.dev
    # REGISTRY_REPO_NAME: "rmr-alpha"
    # IMAGE_NAME: "api"
    # IMAGE_URL: "$ARTIFACT_REGISTRY/${{ secrets.GCP_PROJECT_ID }}/$REGISTRY_REPO_NAME/$IMAGE_NAME"

on:
  workflow_dispatch:

jobs:
  push-api-image:
    name: Build and Push the API container image
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.REPO_OWNER }}/${{ vars.REPO_NAME_API }}
          path: ${{ vars.REPO_NAME_API }}
      
      - name: Print the checked out repo content
        run: |
          cd ${{ vars.REPO_NAME_API }}
          ls -la

  push-webapp-image:
    name: Build and Push the Webapp container image
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.REPO_OWNER }}/${{ vars.REPO_NAME_WEBAPP }}
          path: ${{ vars.REPO_NAME_WEBAPP }}
      
      - name: Print the checked out repo content
        run: |
          cd ${{ vars.REPO_NAME_WEBAPP }}
          ls -la

  # deploy:
  #   name: Deployig To Environment
  #   runs-on: ubuntu-latest
  #   needs: 
  #     - build-test
  #     - semantic-release

  #   steps:
  #     - name: Check out repository
  #       uses: actions/checkout@v4

  #     #######################################################################
  #     - name: Authenticate to Google Cloud
  #       uses: google-github-actions/auth@v2.1.7
  #       with:
  #         credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

  #     #######################################################################
  #     - name: Build Docker Image
  #       run: |
  #         image=${{ env.IMAGE_URL }}:${{ needs.semantic-release.outputs.IMAGE_TAG }}
  #         docker build -t $image ./api_service
      
  #     #######################################################################
  #     - name: Push to Artifact Registry
  #       run: |
  #         image=${{ env.IMAGE_URL }}:${{ needs.semantic-release.outputs.IMAGE_TAG }}
  #         gcloud auth configure-docker ${{ env.ARTIFACT_REGISTRY }}
  #         docker push $image